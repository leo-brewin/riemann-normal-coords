{a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w#}::Indices(position=independent).

\nabla{#}::Derivative.
\partial{#}::PartialDerivative.

import cdblib

# ------------------------------------------------------------------------------------
# the metric

# metric in terms of R and \partial R
tmp = cdblib.get ('g_ab_3','metric.export')
tmp = cdblib.get ('g_ab_4','metric.export')
tmp = cdblib.get ('g_ab_5','metric.export')
tmp = cdblib.get ('g_ab_6','metric.export')

# metric in terms of R and \nabla R
tmp = cdblib.get ('g_ab',  'metric.export')

tmp = cdblib.get ('g_ab_scaled0','metric.export')
tmp = cdblib.get ('g_ab_scaled2','metric.export')
tmp = cdblib.get ('g_ab_scaled3','metric.export')
tmp = cdblib.get ('g_ab_scaled4','metric.export')
tmp = cdblib.get ('g_ab_scaled5','metric.export')

# ------------------------------------------------------------------------------------
# the inverse metric

# inverse metric in terms of R and \partial R
tmp = cdblib.get ('g^ab_3','metric-inv.export')
tmp = cdblib.get ('g^ab_4','metric-inv.export')
tmp = cdblib.get ('g^ab_5','metric-inv.export')
tmp = cdblib.get ('g^ab_6','metric-inv.export')

# inverse metric in terms of R and \nabla R
tmp = cdblib.get ('g^ab',  'metric-inv.export')

tmp = cdblib.get ('g^ab_scaled0','metric-inv.export')
tmp = cdblib.get ('g^ab_scaled2','metric-inv.export')
tmp = cdblib.get ('g^ab_scaled3','metric-inv.export')
tmp = cdblib.get ('g^ab_scaled4','metric-inv.export')
tmp = cdblib.get ('g^ab_scaled5','metric-inv.export')

# ------------------------------------------------------------------------------------
# the generalised connections

# 4th order gen gamma
tmp = cdblib.get ('gen_gamma_0_4th','genGamma.export')
tmp = cdblib.get ('gen_gamma_1_4th','genGamma.export')

# 6th order gen gamma
tmp = cdblib.get ('gen_gamma_0','genGamma.export')
tmp = cdblib.get ('gen_gamma_1','genGamma.export')
tmp = cdblib.get ('gen_gamma_2','genGamma.export')
tmp = cdblib.get ('gen_gamma_3','genGamma.export')

# 6th order gen gamma scaled
tmp = cdblib.get ('gen_gamma_0_scaled','genGamma.export')
tmp = cdblib.get ('gen_gamma_1_scaled','genGamma.export')
tmp = cdblib.get ('gen_gamma_2_scaled','genGamma.export')
tmp = cdblib.get ('gen_gamma_3_scaled','genGamma.export')

# ------------------------------------------------------------------------------------
# the metric determinent and friends

tmp = cdblib.get ('Ndetg','detg2.export')
tmp = cdblib.get ('sqrtNdetg','detg2.export')
tmp = cdblib.get ('logNdetg','detg2.export')

# ------------------------------------------------------------------------------------
# the geodesic ivp

# 4th order ivp terms, scaled
tmp = cdblib.get ('ivp42','geodesic-ivp.export')
tmp = cdblib.get ('ivp43','geodesic-ivp.export')

# 6th order ivp terms, scaled
tmp = cdblib.get ('ivp62','geodesic-ivp.export')
tmp = cdblib.get ('ivp63','geodesic-ivp.export')
tmp = cdblib.get ('ivp64','geodesic-ivp.export')
tmp = cdblib.get ('ivp65','geodesic-ivp.export')

# ------------------------------------------------------------------------------------
# the geodesic bvp

# 4th order ivp
tmp = cdblib.get ('bvp4','geodesic-bvp.export')

# 6th order bvp terms, scaled
tmp = cdblib.get ('bvp622','geodesic-bvp.export')
tmp = cdblib.get ('bvp623','geodesic-bvp.export')
tmp = cdblib.get ('bvp624','geodesic-bvp.export')
tmp = cdblib.get ('bvp625','geodesic-bvp.export')

tmp = cdblib.get ('bvp633','geodesic-bvp.export')
tmp = cdblib.get ('bvp634','geodesic-bvp.export')
tmp = cdblib.get ('bvp635','geodesic-bvp.export')

tmp = cdblib.get ('bvp644','geodesic-bvp.export')
tmp = cdblib.get ('bvp645','geodesic-bvp.export')

tmp = cdblib.get ('bvp655','geodesic-bvp.export')

# ------------------------------------------------------------------------------------
# the geodesic lsq

# 6th order lsq terms, scaled
tmp = cdblib.get ('rnc61scaled','gen2rnc.export')
tmp = cdblib.get ('rnc62scaled','gen2rnc.export')
tmp = cdblib.get ('rnc63scaled','gen2rnc.export')
tmp = cdblib.get ('rnc64scaled','gen2rnc.export')
tmp = cdblib.get ('rnc65scaled','gen2rnc.export')

# ------------------------------------------------------------------------------------
# the geodesic lsq

# 3rd to 6th order lsq
tmp = cdblib.get ('lsq3','geodesic-lsq.export')
tmp = cdblib.get ('lsq4','geodesic-lsq.export')
tmp = cdblib.get ('lsq5','geodesic-lsq.export')
tmp = cdblib.get ('lsq6','geodesic-lsq.export')

# 6th order lsq terms, scaled
tmp = cdblib.get ('lsq60','geodesic-lsq.export')
tmp = cdblib.get ('lsq62','geodesic-lsq.export')
tmp = cdblib.get ('lsq63','geodesic-lsq.export')
tmp = cdblib.get ('lsq64','geodesic-lsq.export')
tmp = cdblib.get ('lsq65','geodesic-lsq.export')

# ------------------------------------------------------------------------------------
# the dRabcd

# 6th order dRabcd, scaled
tmp = cdblib.get ('dRabcd61scaled','dRabcd.export')
tmp = cdblib.get ('dRabcd62scaled','dRabcd.export')
tmp = cdblib.get ('dRabcd63scaled','dRabcd.export')
tmp = cdblib.get ('dRabcd64scaled','dRabcd.export')
tmp = cdblib.get ('dRabcd65scaled','dRabcd.export')

# ------------------------------------------------------------------------------------
# the dGamma

# 6th order dGamma, scaled
tmp = cdblib.get ('dGamma61scaled','dGamma.export')
tmp = cdblib.get ('dGamma62scaled','dGamma.export')
tmp = cdblib.get ('dGamma63scaled','dGamma.export')
tmp = cdblib.get ('dGamma64scaled','dGamma.export')
tmp = cdblib.get ('dGamma65scaled','dGamma.export')


